{
  "Bank.Domain.BankAccount.html": {
    "href": "Bank.Domain.BankAccount.html",
    "title": "Class BankAccount | Bank.Domain",
    "summary": "Class BankAccount Namespace Bank.Domain Assembly Bank.Domain.dll Representa una cuenta bancaria con operaciones básicas de débito y crédito. public class BankAccount Inheritance object BankAccount Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors BankAccount(string, double) Inicializa una nueva instancia de BankAccount con nombre de cliente y saldo inicial. public BankAccount(string customerName, double balance) Parameters customerName string Nombre del titular de la cuenta. balance double Saldo inicial de la cuenta. Fields DebitAmountExceedsBalanceMessage Mensaje de error cuando el monto del débito excede el saldo disponible. public const string DebitAmountExceedsBalanceMessage = \"Debit amount exceeds balance\" Field Value string DebitAmountLessThanZeroMessage Mensaje de error cuando el monto del débito es menor que cero. public const string DebitAmountLessThanZeroMessage = \"Debit amount is less than zero\" Field Value string Properties Balance Obtiene el saldo actual de la cuenta. public double Balance { get; } Property Value double CustomerName Obtiene el nombre del cliente asociado a la cuenta. public string CustomerName { get; } Property Value string Methods Credit(double) Realiza una operación de crédito en la cuenta. public void Credit(double amount) Parameters amount double Cantidad a acreditar. Exceptions ArgumentOutOfRangeException Se lanza si amount es negativo. Debit(double) Realiza una operación de débito en la cuenta. public void Debit(double amount) Parameters amount double Cantidad a debitar. Exceptions ArgumentOutOfRangeException Se lanza si amount es negativo o mayor que el saldo actual."
  },
  "Bank.Domain.Tests.BankAccountTests.html": {
    "href": "Bank.Domain.Tests.BankAccountTests.html",
    "title": "Class BankAccountTests | Bank.Domain",
    "summary": "Class BankAccountTests Namespace Bank.Domain.Tests Assembly Bank.Domain.Tests.dll public class BankAccountTests Inheritance object BankAccountTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Credit_WhenAmountIsLessThanZero_ShouldThrowArgumentOutOfRange() [Test] public void Credit_WhenAmountIsLessThanZero_ShouldThrowArgumentOutOfRange() Credit_WhenAmountIsMoreThanZero_ShouldIncreaseBalance() [Test] public void Credit_WhenAmountIsMoreThanZero_ShouldIncreaseBalance() Debit_WhenAmountIsMoreThanBalance_ShouldThrowArgumentOutOfRange() [Test] public void Debit_WhenAmountIsMoreThanBalance_ShouldThrowArgumentOutOfRange()"
  },
  "Bank.Domain.Tests.html": {
    "href": "Bank.Domain.Tests.html",
    "title": "Namespace Bank.Domain.Tests | Bank.Domain",
    "summary": "Namespace Bank.Domain.Tests Classes BankAccountTests"
  },
  "Bank.Domain.html": {
    "href": "Bank.Domain.html",
    "title": "Namespace Bank.Domain | Bank.Domain",
    "summary": "Namespace Bank.Domain Classes BankAccount Representa una cuenta bancaria con operaciones básicas de débito y crédito."
  },
  "docs/getting-started.html": {
    "href": "docs/getting-started.html",
    "title": "Getting Started | Bank.Domain",
    "summary": "Getting Started"
  },
  "docs/introduction.html": {
    "href": "docs/introduction.html",
    "title": "Introduction | Bank.Domain",
    "summary": "Introduction"
  },
  "index.html": {
    "href": "index.html",
    "title": "\uD83D\uDCD8 Documentación del Proyecto Math.Lib | Bank.Domain",
    "summary": "\uD83D\uDCD8 Documentación del Proyecto Math.Lib ¡Bienvenido! Esta es la documentación técnica del proyecto Math.Lib, donde encontrarás detalles sobre la lógica matemática implementada, las clases principales y los resultados de pruebas automatizadas. \uD83D\uDCC2 Secciones disponibles \uD83D\uDD2C Pruebas de la Biblioteca Matemática (Math.Lib): Revisión de los módulos y métodos evaluados mediante pruebas unitarias. \uD83D\uDCCA Informe de Cobertura de Código: Visualización del porcentaje de cobertura alcanzado por las pruebas. \uD83D\uDEE0️ Esta documentación fue generada automáticamente como parte del flujo de integración continua."
  }
}